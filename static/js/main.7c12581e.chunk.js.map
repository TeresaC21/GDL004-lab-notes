{"version":3,"sources":["components/Header.jsx","components/auth/Login.js","components/auth/Register.js","components/user/Notfound.js","components/user/Sidenav.js","components/auth/firebase.js","components/user/Navbar.js","components/notes/Notes.js","components/notes/Notesinput.js","components/notes/Listnote.js","components/user/Home.js","components/auth/Auth.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","id","className","title","Login","useState","email","password","user","setSaveUser","error","setError","onChangeInput","e","target","name","value","onSubmit","preventDefault","trim","uuidv4","type","onChange","htmlFor","to","Register","confirmPassword","Notfound","Sidenav","href","firebaseIn","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","console","log","Navbar","data-target","onClick","auth","signOut","Notes","note","Notesinput","createNote","newNote","setNewNote","data-length","Listnote","notes","setNotes","map","key","Home","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","useEffect","onAuthStateChanged","Provider","App","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7c12581e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n    return(\n    <h2 id=\"encabezado\" className=\"encabezado mt0 mb0\">{props.title}</h2>\n    )\n}\n\nexport default Header;","import React, { useState, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Header from '../Header';\n\nconst Login = () => {\n  // State from value email and password\n  const [user, setSaveUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  //State from Enter de user at home\n  const [userEnter, setUserEnter] = useState(false)\n\n\n  // State from not empty inputs\n  const [error, setError] = useState(false);\n\n  // Take values email and password of input\n  const onChangeInput = (e) => {\n    setSaveUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { email, password } = user;\n  // Click user\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // Validate not empty inputs\n    if (email.trim() === \"\" || password.trim() === \"\") {\n      setError(true);\n      return;\n    }\n    // Delete mesage error\n    setError(false);\n\n    // I THINK ------ ID HERE PUT ID FIREBASE\n    user.id = uuidv4();\n    //console.log(user);\n\n    // Run action\n  };\n  return (\n    <Fragment>\n      <div className=\"backgroundForms\">\n        <Header title=\"NOTES\" />\n\n        <div className=\"container\">\n          <div className=\"row loginRow\">\n            <div className=\"col s12 m8 offset-m2 xl6 offset-xl3\">\n              <div className=\"card center-align opacity-tc\">\n                <div className=\"card-content\">\n                  {error ? (\n                    <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorate mb3\">\n                      ALL FIELDS ARE REQUIRED\n                    </p>\n                  ) : null}\n\n                  <form onSubmit={onSubmit}>\n                    <h4 className=\"mt0 mb3 textColorLogo\">Log in</h4>\n                    <div className=\"grey-text\">\n                      <div className=\"input-field col s12\">\n                        <input\n                          name=\"email\"\n                          type=\"email\"\n                          id=\"email\"\n                          className=\"validate\"\n                          value={email}\n                          onChange={onChangeInput}\n                        />\n                        <label htmlFor=\"email\">Email</label>\n                      </div>\n                      <div className=\"input-field col s12\">\n                        <input\n                          name=\"password\"\n                          type=\"password\"\n                          id=\"password\"\n                          className=\"validate\"\n                          value={password}\n                          onChange={onChangeInput}\n                        />\n                        <label htmlFor=\"password\">Password</label>\n                      </div>\n                    </div>\n\n                    <div className=\"text-center\">\n                      <button\n                        className=\"btn waves-effect waves-light deep-orange\"\n                        type=\"submit\"\n                        name=\"action\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                  </form>\n\n                  <Link to={\"/register\"}>\n                    <p className=\"right-align\">Sign up</p>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n \nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../Header';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Register = () => {\n  const [user, setSaveUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [error, setError] = useState(false);\n\n  // Take values email and password of input\n  const onChangeInput = (e) => {\n    setSaveUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { name, email, password, confirmPassword } = user;\n\n  // Click user\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // Validate not empty inputs\n    if (\n      name.trim() === \"\" ||\n      email.trim() === \"\" ||\n      password.trim() === \"\" ||\n      confirmPassword.trim() === \"\"\n    ) {\n      setError(true);\n      return;\n    }\n    // Delete mesage error\n    setError(false);\n\n    // I THINK ------ ID HERE PUT ID FIREBASE\n    user.id = uuidv4();\n    //console.log(user);\n\n    // Password min of six caracters\n\n    // The 2 password same\n\n    // Run action\n  };\n\n  return (\n    <div className=\"backgroundForms\">\n      <Header title=\"NOTES\" />\n      <div className=\"container\">\n        <div className=\"row loginRow\">\n          <div className=\"col s12 m8 offset-m2 xl6 offset-xl3\">\n            <div className=\"card center-align opacity-tc\">\n              <div className=\"card-content\">\n                {error ? (\n                  <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorate mb3\">\n                    ALL FIELDS ARE REQUIRED\n                  </p>\n                ) : null}\n\n                <form onSubmit={onSubmit}>\n                  <h4 className=\"mt0 mb3 textColorLogo\">Register</h4>\n                  <div className=\"grey-text\">\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"name\"\n                        type=\"text\"\n                        id=\"text\"\n                        className=\"validate\"\n                        value={name}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"text\">Name</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"email\"\n                        type=\"email\"\n                        id=\"email\"\n                        className=\"validate\"\n                        value={email}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"email\">Email</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"password\"\n                        type=\"password\"\n                        id=\"password\"\n                        className=\"validate\"\n                        value={password}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"password\">Password</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        id=\"confirmPassword\"\n                        className=\"validate\"\n                        value={confirmPassword}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <button\n                      className=\"btn waves-effect waves-light deep-orange\"\n                      type=\"submit\"\n                      name=\"action\"\n                    >\n                      Sign up\n                    </button>\n                  </div>\n                </form>\n                <Link to={\"/\"}>\n                  <p className=\"right-align\">Login</p>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Register;","import React, { Fragment } from 'react';\n\nconst Notfound = () => {\n  return (\n   \n      <div className=\" backRender\">\n          \n           <p className=\"title\">404: OPS! PAGE NOT FOUND</p>\n     \n    </div>\n  );\n};\n \nexport default Notfound;","import React from 'react';\n\nconst Sidenav = () => {\n    return (\n      <aside>\n        <ul className=\"collection mt0 mb0\">\n          \n          <a\n            className=\"collection-item waves-effect btn modal-trigger textOrange\"\n            /* this href take like modal COMPONENT ID Notesinput */\n            href=\"#modalNote\"\n          >\n           Add Note\n          </a>\n          \n          {/*  More bottons of bar */}\n          <a\n            href=\"#!\"\n            className=\"collection-item waves-effect modal-trigger textOrange\"\n          >\n            Favorites\n          </a>\n          <a\n            href=\"#!\"\n            className=\"collection-item waves-effect modal-trigger textOrange\"\n          >\n            Show All\n          </a>\n          <a\n            href=\"#!\"\n            className=\"collection-item waves-effect modal-trigger textOrange\"\n          >\n            Removed\n          </a>\n          \n        </ul>\n      </aside>\n    );\n}\n \nexport default Sidenav;\n\n {/* MODAL MATERIALIZE */}\n         {/*  <div id=\"modal1\" className=\"modal\">\n            <div className=\"modal-content\">\n              <h4>Modal Header</h4>\n              <p>A bunch of text</p>\n            </div>\n            <div className=\"modal-footer\">\n              <a\n                href=\"#!\"\n                className=\"modal-close waves-effect waves-green btn-flat\"\n              >\n                Agree\n              </a>\n            </div>\n          </div> */}","import firebase from \"firebase\";\nimport \"firebase/auth\";\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBmPULFW7W94gO4KjBRCfguxF_AkyW2nKk\",\n    authDomain: \"lab-note-ts.firebaseapp.com\",\n    databaseURL: \"https://lab-note-ts.firebaseio.com\",\n    projectId: \"lab-note-ts\",\n    storageBucket: \"lab-note-ts.appspot.com\",\n    messagingSenderId: \"72109335592\",\n    appId: \"1:72109335592:web:98bfc61f4fd58db4fc411d\"\n  };\n  // Initialize Firebase\n  const firebaseIn = firebase.initializeApp(firebaseConfig);\n  console.log(firebaseIn);\n  \nexport default firebaseIn;","import React, { Fragment } from 'react';\nimport Sidenav from './Sidenav';\n import firebaseIn from '../auth/firebase'; \n\nconst Navbar = () => {\n\n  return (\n<Fragment>\n  <nav>\n    <div className=\"nav-wrapper tc-side\">\n      <a href=\"#!\" className=\"brand-logo textColorLogo\"><i className=\"Medium material-icons ml2 textColorLogo\">favorite</i>Note</a>\n      <a href=\"#\" data-target=\"menuResponsive\" className=\"sidenav-trigger\">\n        <i className=\"material-icons\">menu</i>\n      </a>\n      <ul className=\"right hide-on-med-and-down\">\n        <li><a href=\"#\"><i className=\"material-icons textColorLogo\">search</i></a></li>\n        <li><a href=\"#\" onClick={() => firebaseIn.auth().signOut()}  ><i className=\"material-icons textColorLogo\">cancel_presentation</i></a></li>\n      </ul>\n    </div>\n  </nav>\n\n                        {/* Here bar responsive */}\n  <ul className=\"sidenav backgroundBurger barWidth\" id=\"menuResponsive\">\n    <Sidenav />\n        <li><a href=\"#\"><i className=\"material-icons textColorLogo\">search</i></a></li>\n        <li><a href=\"#\"><i className=\"material-icons textColorLogo\">cancel_presentation</i></a></li>\n  </ul>\n  </Fragment>\n  );\n}\n\nexport default Navbar;","import React, {useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Listnote from './Listnote';\n\n\nconst Notes = ({ note }) => {\n  \n  return (\n    <div className=\"row\">\n      <div className=\"col s12 m6 \">\n        <div className=\"card opacity-tc\">\n          <span className=\"card-title textNote\">Note</span>\n\n          <div className=\"card-image\">\n            <a\n              className=\"collection-item modal-trigger btn-floating halfway-fab waves-effect waves-light red mb1 textColorsBar\"\n              href=\"#modalNote\"\n            >\n              <i className=\"material-icons\">add_circle</i>\n            </a>\n            {/*  <img src=\"images/sample-1.jpg\" /> */}\n          </div>\n\n          <div className=\"card-content textNote\">\n            <p>{note.note}</p>\n          </div>\n\n          <div className=\"card-action\">\n            <a href=\"#\" className=\"textColorsBar ml80\"></a> {/* Delete */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n \nexport default Notes;\n\n\n  // ************** New Notes that add the COMPONENT ListNote ***************\n  // State for project\n/*   const [newNote, setNewNote] = useState({\n    note: ''\n  })\n  const [error, setError] = useState(false)\n  // Read content the input\n  const onChangeNote = e => {\n    setNewNote({\n      ...newNote,\n      [e.target.name] : e.target.value\n    })\n  }\n  const {note} = newNote; // extract name of project\n\n  // When user save note\n  const onSubmitNote = e => {\n    e.preventDefault();\n\n    // validate note\n    if(note.trim() === ''){\n      setError(true);\n      return;\n    }\n    // Delete mesage error\n      setError(false)\n\n    // I THINK ------ ID HERE PUT ID FIREBASE \n    newNote.id = uuidv4();\n    //console.log(user);\n\n    \n  // Create note\n\n  //add the state\n\n   // reload the form\n\n\n  } */\n\n{/* {error ? <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorsBar mb3\">field are required</p>\n              : null}\n\n            <form \n            onSubmit={onSubmitNote} \n            >\n            <input\n            type=\"text\"\n            name=\"note\"\n            value={note}\n            onChange={onChangeNote}\n            />\n            <button\n              className=\"btn waves-effect waves-light deep-orange\"\n              type=\"submit\"\n              name=\"action\"\n              >Save\n            </button> \n            </form> */}","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Notesinput = ({ createNote }) => {\n  // State for project\n  const [newNote, setNewNote] = useState({\n    note: \"\",\n  });\n  const [error, setError] = useState(false);\n\n  // Read content the input\n  const onChangeNote = (e) => {\n    setNewNote({\n      ...newNote,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { note } = newNote; // extract note of project\n\n  // When user save note\n  const onSubmitNote = (e) => {\n    e.preventDefault();\n\n    // validate note\n    if (note.trim() === \"\") {\n      setError(true);\n      return;\n    }\n\n    // Delete mesage error\n    setError(false);\n\n    // I THINK ------ ID HERE PUT ID FIREBASE\n    newNote.id = uuidv4();\n    //console.log(note);\n\n    // Create note in COMPONENT Listnote\n    createNote(newNote);\n\n    // reload the form\n    setNewNote({\n      note: \"\",\n    });\n  };\n  return (\n    /*  <div className=\"row\">\n      <div className=\"col s12 m6 mt4\"> */\n    <div id=\"modalNote\" className=\"card backgroundModal modal\">\n      <span className=\"card-title textColorLogo ml3a\">New Note</span>\n      <div className=\"card-image\">\n        <a className=\"btn-floating halfway-fab waves-effect waves-light  deep-orange accent-2 mba7\">\n          <i className=\"material-icons\">edit</i>\n        </a>\n        {/*  <img src=\"images/sample-1.jpg\" /> */}\n        <a href=\"#\" className=\"btn-floating halfway-fab waves-effect waves-light red mr4 mba7\">\n          <i className=\"material-icons\">delete</i>\n        </a>\n      </div>\n      <div className=\"card-content textColorLogo\">\n       \n        {error ? (\n          <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorsBar mb3\">\n            field are required\n          </p>\n        ) : null}\n        <form onSubmit={onSubmitNote}>\n          <textarea\n            className=\"materialize-textarea textColorLogo\"\n            data-length=\"120\"\n            name=\"note\"\n            value={note}\n            onChange={onChangeNote}\n          />\n          <button\n            className=\"btn waves-effect waves-light deep-orange ml3a mta1\"\n            type=\"submit\"\n            name=\"action\"\n          >\n            Save\n          </button>\n        </form>\n      </div>\n      <div className=\"card-action\">\n        \n      </div>\n    </div>\n    /*  </div>\n    </div> */\n  );\n};\n\nexport default Notesinput;\n","import React, { Fragment, useState } from 'react';\nimport Notes from './Notes' // I still dont not it can be notes or notesinput\nimport Notesinput from './Notesinput'\n\nconst Listnote = () => {\n  // List of notes\n  const [notes, setNotes] = useState([]);\n\n  // Function take notes actually and add the new\n  const createNote = (note) => {\n    setNotes([...notes, note]);\n  };\n  return (\n    <Fragment>\n      <ul>\n        <Notesinput \n        createNote={createNote} \n        />\n      </ul>\n      <div>\n        <h5 className=\"textPurple mlL\">LIST NOTES</h5>\n        {notes.map((note) => (\n          <Notes\n           key={note.id} \n           note={note} \n           />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n \nexport default Listnote;\n\n/*  const notes = [{\n    note: '', status: true\n}]; */\n/* {notes.length === 0\n    ? (<li><h5>Notes Empty</h5></li>)\n    : notes.map(note =>()) } */","import React, { Fragment } from 'react';\nimport Navbar from './Navbar';\nimport Sidenav from './Sidenav';\nimport Listnote from '../notes/Listnote';\n\n\nconst Home = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"row backgroundColorsHome\">\n        <div>\n          <div className=\"col s3 hide-on-med-and-down l2 backgroundGray marginCollection\">\n            <Sidenav />\n          </div>\n          <div className=\"col s9 m8 l10\">\n            {/*  <Notesinput /> */}\n            <Listnote />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n \nexport default Home;","import React, { useEffect, useState } from 'react';\nimport firebaseIn from \"./firebase\";\n\nexport const AuthContext = React.createContext();/*  using in PrivateRoute into useContext*/\n\nexport const AuthProvider = ({ children }) => {\n    console.log(children);\n    \n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        firebaseIn.auth().onAuthStateChanged(setCurrentUser);\n        \n    }, []);\n\n    return (\n        <AuthContext.Provider\n        value={{\n        currentUser\n        }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Notfound from './components/user/Notfound';\nimport Home from './components/user/Home';\nimport { AuthProvider } from './components/auth/Auth';\nimport PrivateRoute from './components/auth/PrivateRoute';\n\nfunction App() {\n  \n  return (\n    <AuthProvider>\n    <Router /* basename={window.location.pathname || ''} */>\n     <Switch>\n       <Route exact path=\"/\" component={Login} />\n       <Route exact path=\"/register\" component={Register} />\n       <Route exact path=\"/home\" component={Home} />\n       <Route render={()=> <Notfound />} /> \n     </Switch>\n    </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n/*\nconst isAuthenticated = true;\n{\n  isAuthenticated ? \n\n  : <Redirect to=\"/\" />\n      } */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// css \nimport './index.css';\n\nReactDOM.render(\n   <React.StrictMode> \n    <App />,\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}