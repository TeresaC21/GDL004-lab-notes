{"version":3,"sources":["components/auth/Login.js","components/auth/Register.js","components/notes/Notes.js","components/notes/Navbar.js","components/notes/Sidenav.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Login","useState","email","password","user","setSaveUser","onChangeInput","e","target","name","value","className","onSubmit","preventDefault","type","id","onChange","for","to","Register","confirmPassword","Notes","class","href","Navbar","Sidenav","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a931a4b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Login = () => {\n\nconst [user, setSaveUser] = useState({\n  email: '',\n  password: ''\n})\nconst { email, password } = user\n\n// Take values email and password of input\nconst onChangeInput = e => {\n  setSaveUser({\n    ...user,\n    [e.target.name] : e.target.value\n  })\n}\n\n// Click user\nconst onSubmit = e => {\n  e.preventDefault();\n\n  // Validate not empty inputs\n\n\n  // Run action\n  \n}\n\n    return (\n      <div className=\"backgroundForms\">\n      <div className=\"container\">\n        <div className=\"row loginRow\">\n          <div className=\"col s12 m8 offset-m2 xl6 offset-xl3\">\n            <div className=\"card center-align opacity-tc\">\n              <div className=\"card-content\">\n                <form\n                  onSubmit={onSubmit}\n                >\n                  <h4 className=\"mt0 mb3 textColorLogo\">Log in</h4>\n                  <div className=\"grey-text\">\n                  <div className=\"input-field col s12\">\n                    <input\n                    name=\"email\"\n                    type=\"email\"\n                    id=\"email\"\n                    className=\"validate\"\n                    value={email}\n                    onChange={onChangeInput}\n                    />\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <div className=\"input-field col s12\">\n                    <input\n                    name=\"password\"\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"validate\"\n                    value={password}\n                    onChange={onChangeInput}\n                    />\n                    <label for=\"password\">Password</label>\n                  </div>\n                  </div>\n                  <div className=\"text-center\">\n                  <button\n                  className=\"btn waves-effect waves-light deep-orange\"\n                  type=\"submit\"\n                  name=\"action\"\n                  >Login\n                  </button>\n                  </div>\n                </form>\n                <Link to={'/register'}>\n                  <p className=\"right-align\">\n                  Sign up\n                  </p>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n     </div>\n    );\n}\n \nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Register = () => {\n    const [user, setSaveUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      })\n      const { name, email, password, confirmPassword } = user\n      \n      // Take values email and password of input\n      const onChangeInput = e => {\n        setSaveUser({\n          ...user,\n          [e.target.name] : e.target.value\n        })\n      }\n      \n      // Click user\n      const onSubmit = e => {\n        e.preventDefault();\n      \n        // Validate not empty inputs\n      \n        // Password min of six caracters\n\n        // The 2 password same\n\n        // Run action\n\n    \n        \n      }\n      \n          return (\n  <div className=\"backgroundForms\">\n    <div className=\"container\">\n        <div className=\"row loginRow\">\n          <div className=\"col s12 m8 offset-m2 xl6 offset-xl3\">\n            <div className=\"card center-align opacity-tc\" >\n              <div className=\"card-content\">\n                <form\n                  onSubmit={onSubmit}\n                >\n                  <h4 className=\"mt0 mb3 textColorLogo\">Register</h4>\n                  <div className=\"grey-text\">\n                  <div className=\"input-field col s12\">\n                    <input\n                    name=\"name\"\n                    type=\"text\"\n                    id=\"text\"\n                    className=\"validate\"\n                    value={name}\n                    onChange={onChangeInput}\n                    />\n                    <label for=\"text\">Name</label>\n                  </div>\n                  <div className=\"input-field col s12\">\n                    <input\n                    name=\"email\"\n                    type=\"email\"\n                    id=\"email\"\n                    className=\"validate\"\n                    value={email}\n                    onChange={onChangeInput}\n                    />\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <div className=\"input-field col s12\">\n                    <input\n                    name=\"password\"\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"validate\"\n                    value={password}\n                    onChange={onChangeInput}\n                    />\n                    <label for=\"password\">Password</label>\n                  </div>\n                  <div className=\"input-field col s12\">\n                    <input\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    className=\"validate\"\n                    value={confirmPassword}\n                    onChange={onChangeInput}\n                    />\n                    <label for=\"confirmPassword\">Confirm Password</label>\n                  </div>\n                  </div>\n                  <div className=\"text-center\">\n                  <button\n                  className=\"btn waves-effect waves-light deep-orange\"\n                  type=\"submit\"\n                  name=\"action\"\n                  >Sign up\n                  </button>\n                  </div>\n                </form>\n                <Link to={'/'}>\n                  <p className=\"right-align\">\n                  Login\n                  </p>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n          );\n    }\nexport default Register;","import React from 'react';\n\nconst Notes = () => {\n\n    return (\n      <div class=\"row\">\n    <div class=\"col s12 m6 mt4\">\n      <div class=\"card opacity-tc\">\n      <span class=\"card-title textColorLogo\">Card Title</span>\n        <div class=\"card-image\">\n        <a \n        className=\"btn-floating halfway-fab waves-effect waves-light red mb1\"><i \n        className=\"material-icons\">edit</i></a>\n         {/*  <img src=\"images/sample-1.jpg\" /> */}\n          \n        </div>\n        <div className=\"card-content textColorLogo\">\n          <p>\n            <input\n            type=\"text\"\n            name=\"note\"\n            />\n            <button\n              className=\"btn waves-effect waves-light deep-orange\"\n              type=\"submit\"\n              name=\"action\"\n              >Save\n            </button>\n          </p>\n        </div>\n        <div className=\"card-action\">\n          <a href=\"#\" className=\"textColorsBar ml80\">Delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n   \n    );\n}\n \nexport default Notes;\n\n","import React from 'react';\n\nconst Navbar = () => {\n\n    return ( \n        <nav>\n        <div className=\"nav-wrapper tc-side\">\n          <a href=\"#!\" \n          className=\"brand-logo textColorLogo\"><i \n          className=\"Medium material-icons ml2 textColorLogo\">favorite</i>Note Fast</a><ul \n          className=\"right hide-on-med-and-down\">\n            <li><a href=\"sass.html\"><i \n            className=\"material-icons textColorLogo\">search</i></a></li>\n            <li><a href=\"badges.html\"><i \n            className=\"material-icons textColorLogo\">view_module</i></a></li>\n            <li><a href=\"collapsible.html\"><i \n            className=\"material-icons textColorLogo\">refresh</i></a></li>\n            <li><a href=\"mobile.html\"><i \n            className=\"material-icons textColorLogo\">more_vert</i></a></li>\n          </ul>\n        </div>\n      </nav>\n     );\n}\n \nexport default Navbar;","import React from 'react';\n\nconst Sidenav = () => {\n    return ( \n<aside>\n<ul className=\"collection mt0 mb0\">\n  <a href=\"#!\" className=\"collection-item textOrange\">New Note</a>\n  <a href=\"#!\" className=\"collection-item textOrange\">Favorites</a>\n  <a href=\"#!\" className=\"collection-item textOrange\">Show All</a>\n  <a href=\"#!\" className=\"collection-item textOrange\">Papelera</a>\n</ul>\n\n </aside>\n\n     );\n}\n \nexport default Sidenav;","import React from 'react';\nimport Notes from './notes/Notes';\nimport Navbar from './notes/Navbar';\nimport Sidenav from './notes/Sidenav';\n\nconst Home = () => {\n    return ( \n        <div>\n         <Navbar />\n         <div className=\"row\">\n             <div className=\"backgroundColorsHome\">\n         <div className=\"col s3 m4 l3 opacity-tc marginCollection\">\n            <Sidenav />\n            {/* <div className=\"col s9\"></div> */} \n          </div>\n            <div className=\"col s9 m8 l9\">\n               <Notes />\n            </div>\n            </div>\n        </div>\n       </div>\n     );\n}\n \nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\n/* import Notes from './components/notes/Notes';\nimport Navbar from './components/notes/Navbar';\nimport Sidenav from './components/notes/Sidenav'; */\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <Router>\n     <Switch>\n       <Route exact path=\"/\" component={Login} />\n       <Route exact path=\"/register\" component={Register} />\n       <Route exact path=\"/home\" component={Home} />\n     </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// css \nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}