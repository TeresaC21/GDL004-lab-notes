{"version":3,"sources":["components/firebase/firebase.js","components/auth/Auth.js","components/firebase/helper-firebaseAuth.js","components/layout/Header.jsx","components/auth/Login.js","components/auth/Register.js","components/layout/Notfound.js","components/user/Sidenav.js","components/user/Navbar.js","components/notes/Notes.js","components/notes/Notesinput.js","components/notes/Listnote.js","components/user/Home.js","components/auth/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["firebaseIn","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","setLoading","userCurrent","setUserCurrent","useEffect","unsuscribe","auth","onAuthStateChanged","user","Provider","value","registerFB","registerData","e","a","createUserWithEmailAndPassword","email","password","newUser","updateProfile","displayName","name","loginFB","loginData","signInWithEmailAndPassword","logOutFB","signOut","noteFB","firestore","collection","Header","props","id","className","title","Login","history","useHistory","setSaveUser","errorFields","errorUs","error","setError","onChangeInput","target","onSubmit","preventDefault","trim","showUser","console","log","push","message","autoComplete","type","onChange","htmlFor","to","Register","confirmPassword","Notfound","Sidenav","showModalAddNote","href","onClick","Navbar","useContext","outUser","data-target","Notes","note","description","userId","currentNote","setCurrentNote","doc","delete","set","Notesinput","createNote","hideModalAddNote","newNote","setNewNote","onChangeNote","currentTarget","add","uid","then","docRef","noteData","catch","autcomplete","data-length","Listnote","modalInput","notes","setNotes","onSnapshot","snapshot","forEach","data","map","key","Home","setModalInput","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1611b67.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBmPULFW7W94gO4KjBRCfguxF_AkyW2nKk\",\n    authDomain: \"lab-note-ts.firebaseapp.com\",\n    databaseURL: \"https://lab-note-ts.firebaseio.com\",\n    projectId: \"lab-note-ts\",\n    storageBucket: \"lab-note-ts.appspot.com\",\n    messagingSenderId: \"72109335592\",\n    appId: \"1:72109335592:web:98bfc61f4fd58db4fc411d\"\n  };\n  // Initialize Firebase\n  const firebaseIn = firebase.initializeApp(firebaseConfig);\n\nexport default firebaseIn;","import React, {useState, useEffect} from 'react';\n\n// Firebase\nimport firebaseIn from \"../firebase/firebase\";\n\nexport const AuthContext = React.createContext();  //using in PrivateRoute and Navbar useContext\n\nexport const AuthProvider = ({ children }) => {\n    \n    const [loading, setLoading] = useState(true)\n    const [userCurrent, setUserCurrent] = useState({});\n\n    useEffect(() => {\n        const unsuscribe = firebaseIn.auth().onAuthStateChanged(user =>{\n            setLoading(false)\n            if (user) {\n                setUserCurrent(user)\n            } else {\n                setUserCurrent(null)\n            }\n        });\n        return () => unsuscribe();\n    }, []);\n   \n    return (\n        <AuthContext.Provider value={{ userCurrent }}>\n            {/* loading\n                ? <>Loading...</>\n                : */ children}\n        </AuthContext.Provider>\n    );\n};\n\n\n /* const [currentUser, setCurrentUser] = useState(null);\n    useEffect(() => {\n        firebaseIn.auth().onAuthStateChanged(setCurrentUser);     \n    }, []); */","\nimport firebaseIn from '../firebase/firebase';\n\nexport const registerFB = async (registerData, e) => {\n       const newUser = await firebaseIn\n        .auth()\n        .createUserWithEmailAndPassword(registerData.email, registerData.password)\n         return await newUser.user.updateProfile({\n            displayName: registerData.name\n        })   \n}\n\nexport const loginFB = async (loginData) => {\n       return await firebaseIn\n        .auth()\n        .signInWithEmailAndPassword(loginData.email, loginData.password);\n} \n\n// Sign Out\nexport const logOutFB =  async () => {\n     return await firebaseIn\n    .auth()\n    .signOut();\n  };\n\n // Notes collection\n export const noteFB = () => {\n   const db = firebaseIn.firestore();\n   return db.collection('notes');\n}","import React from 'react';\n\nfunction Header(props) {\n    return(\n    <h2 id=\"encabezado\" className=\"encabezado mt0 mb0\">{props.title}</h2>\n    )\n}\n\nexport default Header;","import React, { useState, Fragment, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom'; // it have prop history\nimport { AuthContext } from './Auth';\n\n//Firebase\nimport { loginFB } from '../firebase/helper-firebaseAuth';\n\n// Components\nimport Header from '../layout/Header';\n\n\nconst Login = () => {\n\n  const history = useHistory();\n  // State from value email and password\n  const [user, setSaveUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // State from not empty inputs\n  const [error, setError] = useState({\n    errorFields: false,\n    errorUs: false\n  });\n\n  // Take values email and password of input\n  const onChangeInput = (e) => {\n    setSaveUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { email, password } = user;\n\n  // Click user\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate not empty inputs\n    if (email.trim() === \"\" || password.trim() === \"\") {\n      setError({\n        ...error,\n        errorFields: true\n      });\n      return;\n    }\n    // Delete mesage error\n    setError({\n      ...error,\n      errorFields: false\n    });\n\n    // Login with Firebase\n    try {\n      const showUser = await loginFB(user);\n      console.log(showUser);\n       history.push('/home') \n    } catch (error) {\n      console.error('Error login account', error.message)\n      setError({\n        ...error,\n        errorUs: error.message\n      })\n      return;\n    }\n    \n   // I THINK ------ ID HERE PUT ID FIREBASE\n   /*  user.id = uuidv4(); */\n    //console.log(user);\n  };\n  \n  /* const { userFB } = useContext(AuthContext);\n    if(userFB){\n      return history.push('/');\n    } */\n  \n  return (\n    <Fragment>\n      <div className=\"backgroundForms\">\n        <Header title=\"NOTES\" />\n\n        <div className=\"container\">\n          <div className=\"row loginRow\">\n            <div className=\"col s12 m8 offset-m2 xl6 offset-xl3\">\n              <div className=\"card center-align opacity-tc\">\n                <div className=\"card-content\">\n                  {error.errorFields ? (\n                    <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorate mb3\">\n                      ALL FIELDS ARE REQUIRED\n                    </p>\n                  ) : null}\n\n                  <form onSubmit={onSubmit}  autoComplete=\"off\">\n                    <h4 className=\"mt0 mb3 textColorLogo\">Log in</h4>\n                    <div className=\"grey-text\">\n                      <div className=\"input-field col s12\">\n                        <input\n                          name=\"email\"\n                          type=\"email\"\n                          id=\"email\"\n                          className=\"validate\"\n                          value={email}\n                          onChange={onChangeInput}\n                        />\n                        <label htmlFor=\"email\">Email</label>\n                      </div>\n                      <div className=\"input-field col s12\">\n                        <input\n                          name=\"password\"\n                          type=\"password\"\n                          id=\"password\"\n                          className=\"validate\"\n                          value={password}\n                          onChange={onChangeInput}\n                        />\n                        <label htmlFor=\"password\">Password</label>\n                      </div>\n                    </div>\n\n                    <div className=\"text-center\">\n                      <button\n                        className=\"btn waves-effect waves-light deep-orange\"\n                        type=\"submit\"\n                        name=\"action\"\n                      >\n                        Login\n                      </button>\n                    </div>\n\n                    {error.errorUs ? ( \n                    <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorate mb2\">{error.errorUs}</p>\n                    ) : null}\n\n                  </form>\n\n                  <Link to={\"/register\"}>\n                    <p className=\"right-align\">Sign up</p>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n \nexport default  Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../layout/Header';\n/* import { v4 as uuidv4 } from 'uuid'; */\nimport { registerFB } from '../firebase/helper-firebaseAuth'\n\nimport { useHistory } from 'react-router' // tiene prop history\n\nconst Register = () => {\n\n  const history = useHistory();\n\n  const [user, setSaveUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  /* const [error, setError] = useState(false); */\n  const [error, setError] = useState({\n    errorFields: false,\n    errorUs: false\n  });\n\n  // Take values email and password of input\n  const onChangeInput = (e) => {\n    setSaveUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { name, email, password, confirmPassword } = user;\n\n  // Click user\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    // Validate not empty inputs\n    if (\n      name.trim() === \"\" ||\n      email.trim() === \"\" ||\n      password.trim() === \"\" ||\n      confirmPassword.trim() === \"\"\n    ) {\n      setError({\n        ...error,\n        errorFields: true\n      });\n      return;\n    }\n   \n    // Delete mesage error\n    setError({\n      ...error,\n      errorFields: false\n    });\n\n    // Register with Firebase\n    try {\n      await registerFB(user);\n      history.push('/home')\n    } catch (error) {\n      console.error('Error login account', error.message)\n      setError({\n        ...error,\n        errorUs: error.message\n      })\n      return;\n    }\n    \n    // Password min of six caracters\n\n    // The 2 password same\n\n  };\n\n  return (\n    <div className=\"backgroundForms\">\n      <Header title=\"NOTES\" />\n      <div className=\"container\">\n        <div className=\"row loginRow\">\n          <div className=\"col s12 m8 offset-m2 xl6 offset-xl3\">\n            <div className=\"card center-align opacity-tc\">\n              <div className=\"card-content\">\n                {error.errorFields ? (\n                  <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorate pd mb3\">\n                    ALL FIELDS ARE REQUIRED\n                  </p>\n                ) : null}\n\n                <form onSubmit={onSubmit}  autoComplete=\"off\">\n                  <h4 className=\"mt0 mb3 textColorLogo\">Register</h4>\n                  <div className=\"grey-text\">\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"name\"\n                        type=\"text\"\n                        id=\"text\"\n                        className=\"validate\"\n                        value={name}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"text\">Name</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"email\"\n                        type=\"email\"\n                        id=\"email\"\n                        className=\"validate\"\n                        value={email}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"email\">Email</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"password\"\n                        type=\"password\"\n                        id=\"password\"\n                        className=\"validate\"\n                        value={password}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"password\">Password</label>\n                    </div>\n                    <div className=\"input-field col s12\">\n                      <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        id=\"confirmPassword\"\n                        className=\"validate\"\n                        value={confirmPassword}\n                        onChange={onChangeInput}\n                      />\n                      <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    </div>\n                  </div>\n                  <div className=\"text-center\">\n                    <button\n                      className=\"btn waves-effect waves-light deep-orange\"\n                      type=\"submit\"\n                      name=\"action\"\n                    >\n                      Sign up\n                    </button>\n                  </div>\n\n                {error.errorFields ? ( \n                <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorate mb2\">{error.errorUs}</p>\n                ) : null}\n\n                </form>\n                <Link to={\"/\"}>\n                  <p className=\"right-align\">Login</p>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default  Register;","import React from 'react';\n\nconst Notfound = () => {\n  return (\n   \n      <div className=\" backRender\">\n          \n           <p className=\"title\">404: OPS! PAGE NOT FOUND</p>\n     \n    </div>\n  );\n};\n \nexport default Notfound;","import React from 'react';\n\nconst Sidenav = ({ showModalAddNote }) => { // component Home\n\n    return (\n      <aside>\n        <ul className=\"collection mt0 mb0\">\n          <a  href=\"#!\" \n            className=\"collection-item waves-effect modal-trigger textOrange\"\n            onClick={showModalAddNote}\n            /* Function useState de component Home */\n          >\n           Add Note\n          </a>\n          \n          {/*  More bottons of bar */}\n          <a\n            href=\"#!\"\n            className=\"collection-item waves-effect modal-trigger textOrange\"\n          >\n            Favorites\n          </a>\n          <a\n            href=\"#!\"\n            className=\"collection-item waves-effect modal-trigger textOrange\"\n          >\n            Show All\n          </a>\n          <a\n            href=\"#!\"\n            className=\"collection-item waves-effect modal-trigger textOrange\"\n          >\n            Removed\n          </a>\n          \n        </ul>\n      </aside>\n    );\n}\n \nexport default Sidenav;\n \n         /*  <div id=\"modal1\" className=\"modal\">\n            <div className=\"modal-content\">\n              <h4>Modal Header</h4>\n              <p>A bunch of text</p>\n            </div>\n            <div className=\"modal-footer\">\n              <a\n                href=\"#!\"\n                className=\"modal-close waves-effect waves-green btn-flat\"\n              >\n                Agree\n              </a>\n            </div>\n          </div> */","import React, { Fragment, useState, useContext } from 'react';\n\n// Helper Firebase\nimport { logOutFB } from '../firebase/helper-firebaseAuth';\nimport {AuthContext} from '../auth/Auth';\n\n// Component\nimport Sidenav from './Sidenav';\n\nconst Navbar = ({ showModalAddNote }) => { // prop from component home\n\n  const { userCurrent } = useContext(AuthContext);\n\n  const outUser =  async () => {\n    await logOutFB();\n    console.log('No user, sing out');\n  }\n\n  return (\n<Fragment>\n  <nav>\n    <div className=\"nav-wrapper tc-side\">\n      <a href=\"#!!\" className=\"brand-logo textColorLogo\"><i className=\"Medium material-icons ml2 textColorLogo\">favorite</i>Note</a>\n      <a href=\"#!\" data-target=\"menuResponsive\" className=\"sidenav-trigger\">\n        <i className=\"material-icons\">menu</i>\n      </a>\n      <ul className=\"right hide-on-med-and-down\">\n        <li><a href=\"#!\" className=\"mb1\">{userCurrent ? userCurrent.displayName : null}</a></li>\n        \n        <li><a href=\"#!\"><i className=\"material-icons textColorLogo\">search</i></a></li>\n        <li><a href=\"#!\" onClick={outUser}><i className=\"material-icons textColorLogo\">cancel_presentation</i></a></li>\n      </ul>\n    </div>\n  </nav>\n                        {/* Here bar responsive */}\n  <ul className=\"sidenav backgroundBurger barWidth\" id=\"menuResponsive\"> \n  <Sidenav showModalAddNote={showModalAddNote} />  \n        <li><a href=\"#!\"><i className=\"material-icons textColorLogo\">search</i></a></li>\n        <li><a href=\"#!\"><i className=\"material-icons textColorLogo\">cancel_presentation</i></a></li>\n  </ul>\n\n  </Fragment>\n  );\n}\n\nexport default Navbar;\n\n /* {hideNav ? <Sidenav showSideNav onClick={showModalAddNote} />  : null} */\n /* const [hideNav, setHideNav] = useState(false)\n  const showSideNav = () => {\n    setHideNav(true);\n  } */","import React, { useState, useContext }  from 'react';\nimport {AuthContext} from '../auth/Auth';\n\nimport { noteFB } from '../firebase/helper-firebaseAuth';\n\nconst Notes = ({ note }) => { // note from component Listnote and showModal from Home\n  \n  const { userCurrent } = useContext(AuthContext);\n\n  const { id, title, description, userId } = note;\n\n   const [currentNote, setCurrentNote] = useState({\n     title,\n      description\n   });\n\n  const onEditFB = () => {\n    noteFB().doc(id).set({\n      ...currentNote,\n      description: currentNote.description\n    });\n  };                   \n\n  const onDeleteFB = () => {\n    noteFB().doc(id).delete();\n  };\n  const onChangeNew = e => {\n    setCurrentNote({\n      ...currentNote,\n      description: e.target.value\n    });\n  };  \n\n  return (\n      <div className=\"col s12 m6 \">\n        <div className=\"card opacity-tc actionBtnContainer\">\n          <div className=\"card-content textNote\">\n\n          <span className=\"card-title textNote\">{currentNote.title}</span>\n           {/* <span>{userCurrent ? userCurrent.displayName : null}</span>  */}\n            {/* <p>{note.note}</p> */}\n             <textarea className=\"textarea\" value={currentNote.description} onChange={onChangeNew} />  \n          </div>\n\n          <div className=\"card-action\">\n          \n          <a href=\"#!\" className=\"actionBtn ml70\" onClick={onDeleteFB}>delete</a> \n            <a href=\"#!\" className=\"actionBtn\" onClick={onEditFB}>edit</a> \n          </div>\n        </div>\n      </div>\n  );\n};\n \nexport default Notes;\n","import React, { useState, useContext } from \"react\";\nimport { noteFB } from '../firebase/helper-firebaseAuth';\nimport {AuthContext} from '../auth/Auth';\n\nconst Notesinput = ({ createNote, hideModalAddNote }) => { // \n\n  const { userCurrent } = useContext(AuthContext);\n\n  // State for project\n  const [newNote, setNewNote] = useState({ title: \"\", description: \"\" });\n  const [error, setError] = useState(false);\n\n  // Read content the input\n  const onChangeNote = (e) => {\n    setNewNote({\n      ...newNote,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const { title, description } = newNote; // extract note of project\n\n  // When user save note\n  const onSubmitNote = (e) => {\n    e.preventDefault();\n    // validate note\n    if (description.trim() === \"\" || title.trim() === \"\") {\n      setError(true);\n      return;\n    }\n    // Delete mesage error\n    setError(false);\n\n    // Create Note in Firestore\n    noteFB().add({\n      ...newNote,\n      userId: userCurrent.uid,\n    })\n     .then(function(docRef) {\n       const noteData = {\n         title,\n         description,\n         id: docRef.id,\n         userId: userCurrent.uid\n        }\n      createNote(noteData);\n      //console.log(\"Document written with ID: \", noteData);\n    })\n    .catch(function(error) {\n      console.error(\"Error adding document: \", error);\n    }); \n    \n    // reload the form\n    setNewNote({\n      description: \"\",\n    });\n    // Modal\n    hideModalAddNote();\n  };\n\n  const handleClickModal = (e) => {\n    if(e.target === e.currentTarget) {\n      hideModalAddNote();\n    }\n  }\n  \n  return (\n    <div className=\"modalInput\" onClick={handleClickModal}>\n      <div className=\"card backgroundModal animated fadeInDown\">\n        <form onSubmit={onSubmitNote} autoComplete=\"off\">\n          <div className=\"card-content textColorLogo\">\n            <span className=\"card-title textColorLogo\">New Note</span>\n            <div className=\"card-image\">\n              <a\n                href=\"#!\"\n                className=\"btn-floating halfway-fab waves-effect waves-light  deep-orange accent-2 mba7\"\n              >\n                <i className=\"material-icons\">star</i>\n              </a>\n            </div>\n\n            {error ? (\n              <p className=\"card-panel lighten-5 z-depth-1 backgrounOpacity textColorsBar mb3\">\n                field are required\n              </p>\n            ) : null}\n            <div className=\"row\">\n              <div className=\"input-field col s6\">\n                <input\n                  autcomplete=\"off\"\n                  className=\"textColorLogo\"\n                  id=\"title\"\n                  type=\"text\"\n                  name=\"title\"\n                  value={title}\n                  onChange={onChangeNote}\n                />\n                <label htmlFor=\"title\">I'm a title</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea\n                  autcomplete=\"off\"\n                  className=\"materialize-textarea textColorLogo\"\n                  data-length=\"120\"\n                  id=\"textareaDescription\"\n                  name=\"description\"\n                  value={description}\n                  onChange={onChangeNote}\n                />\n                <label htmlFor=\"textareaDescription\">Add note description...</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-action\">\n            <div className=\"row\">\n              <div className=\"col s4 right\">\n                <button\n                  className=\"btn btn-block waves-effect waves-light deep-orange\"\n                  type=\"submit\"\n                  name=\"action\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Notesinput;\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport {AuthContext} from '../auth/Auth';\n\n// Helper firebase\nimport { noteFB } from '../firebase/helper-firebaseAuth';\n\n// components\nimport Notes from './Notes';\nimport Notesinput from './Notesinput';\n\nconst Listnote = ({ modalInput, hideModalAddNote }) => {  // props of components Home\n\n  const { userCurrent } = useContext(AuthContext);\n  \n  const [notes, setNotes] = useState([]);\n\n  const createNote = (note) => {\n    // get note created in Noteinput pass like prop //setNotes([...notes, note]);\n  };\n\n// Insert in list all notes of firestore\n useEffect(() => {\n    return noteFB().onSnapshot((snapshot) => {\n      const noteData = [];\n      snapshot.forEach(doc => \n        noteData.push(({\n          id: doc.id,\n          title: doc.data().title,\n          description: doc.data().description,\n          userId: userCurrent.uid\n        })));\n      setNotes(noteData);\n      //console.log(noteData) \n  })\n }, []); \n\n  return (\n    <Fragment>\n      {modalInput ? <Notesinput createNote={createNote} hideModalAddNote={hideModalAddNote} /> : null}\n      <div>\n       {/*  <h5 className=\"textOrange\">LIST NOTES</h5> */}\n        {notes.map((note) => {\n          return (\n            <Notes\n             key={note.id} \n             note={note}\n             />\n          )\n        })}\n      </div>\n    </Fragment>\n  );\n};\n \nexport default Listnote;\n\n  /* const data = await noteFB().get();\n   setNotes(data.docs.map(doc => ({...doc.data(), id: doc.id}))); */\n ","import React, { useState } from 'react';\n\n// Components\nimport Navbar from './Navbar';\nimport Sidenav from './Sidenav';\nimport Listnote from '../notes/Listnote';\n\nconst Home = () => {\n  \n  const [modalInput, setModalInput] = useState(false);\n\n  const showModalAddNote = () => {\n    setModalInput(true);\n  }\n  const hideModalAddNote = () => {\n    setModalInput(false);\n  }\n\n  return (\n    <div>\n      <Navbar\n        showModalAddNote={showModalAddNote}\n      />\n      <div className=\"row backgroundColorsHome\">\n        <div /* className=\"\" */>\n          <div className=\"col s3 hide-on-med-and-down l2 backgroundGray marginCollection\">\n            <Sidenav\n            showModalAddNote={showModalAddNote}\n            /> \n          </div>\n          <div className=\"col s9 m8 l10\">\n            <Listnote \n            modalInput={modalInput}\n            hideModalAddNote={hideModalAddNote}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n \nexport default Home;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth'; // const que = React.creteContext \n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n    \n    const {userCurrent} = useContext(AuthContext);\n    \n    return ( \n        <Route\n            {...rest}\n            render={routeProps => \n                !!userCurrent ? (\n                    <RouteComponent {...routeProps} />\n                ) : (\n                    <Redirect to={\"/\"} />\n                )\n            }\n        />\n     );\n}\n \nexport default PrivateRoute;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Notfound from './components/layout/Notfound';\nimport Home from './components/user/Home';\nimport { AuthProvider } from './components/auth/Auth';\n import PrivateRoute from './components/auth/PrivateRoute'; \n\nfunction App() {\n \n  return (\n    <AuthProvider>\n      <Router /* basename={window.location.pathname || ''} */>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <PrivateRoute exact path=\"/home\" component={Home} />\n          <Route render={()=> <Notfound />} /> \n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// css \nimport './index.css';\n\nReactDOM.render(\n   <React.StrictMode> \n    <App />,\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}